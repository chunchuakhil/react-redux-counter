{"version":3,"sources":["thunk/asyncAction-types.js","thunk/asyncActions.js","thunk/asyncActionCreater.js","Counter.js","redux/actions.js","redux/stateReducer-stateChanger.js","thunk/reducer-stateChanger.js","App.js","index.js","redux/action-types.js"],"names":["FETECH_USER_REQUEST","FETECH_USER_SUCCESS","FETECH_USER_FAILURE","fetchUserRequest","type","fetchUserSuccess","user","payload","fetchUserFailure","error","Axios","require","default","fetchUser","dispatch","get","then","response","data","map","id","catch","message","Counter","this","props","count","onClick","plusOne","minusOne","Component","connect","state","countReducer","ADD_ONE","MINUS_ONE","initialState","action","loading","users","userReducer","rootReducer","combineReducers","logger","createLogger","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"gIAAA,mKAAO,IAAMA,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,uB,gCCFnC,qKAMaC,EAAmB,WAC9B,MAAO,CACLC,KAAMJ,wBAGGK,EAAmB,SAACC,GAC/B,MAAO,CACLF,KAAMH,sBACNM,QAASD,IAGAE,EAAmB,SAACC,GAC/B,MAAO,CACLL,KAAMF,sBACNK,QAASE,K,8IClBIC,EAAUC,EAAQ,IAA3BC,Q,EAKJD,EAAQ,IAHVR,E,EAAAA,iBACAE,E,EAAAA,iBACAG,E,EAAAA,iBAmBaK,EAfG,WAChB,OAAO,SAAUC,GAEfA,EAASX,KAETO,EAAMK,IAAI,8CACPC,MAAK,SAACC,GACLH,EAAST,EAAiBY,EAASC,KAAKC,KAAI,SAACb,GAAD,OAAUA,EAAKc,WAE5DC,OAAM,SAACZ,GACNK,EAASN,EAAiBC,EAAMa,eCflCC,E,uKAEF,OACE,qCACE,6BAAKC,KAAKC,MAAMC,QAChB,wBAAQC,QAASH,KAAKC,MAAMG,QAA5B,eACA,wBAAQD,QAASH,KAAKC,MAAMI,SAA5B,sB,GANcC,aA0BPC,eAfS,SAACC,GACvB,MAAO,CACLN,MAAOM,EAAMC,aAAaP,UAGH,SAACZ,GAAD,MAAe,CACxCc,QAAS,WACPd,ECrBuB,CACzBV,KAAM8B,aDsBNL,SAAU,WACRf,ECpBwB,CAC1BV,KAAM+B,cDoBJrB,EAASD,SAIEkB,CAA6CR,G,EE/B7BZ,EAAQ,GAA/BuB,E,EAAAA,QAASC,E,EAAAA,UAEXC,EAAe,CACnBV,MAAO,GAkBMO,MAhBf,WAAqD,IAA/BD,EAA8B,uDAAtBI,EAAcC,EAAQ,uCAClD,OAAQA,EAAOjC,MACb,KAAK8B,EACH,MAAO,CACLR,MAAOM,EAAMN,MAAQ,GAGzB,KAAKS,EACH,MAAO,CACLT,MAAOM,EAAMN,MAAQ,GAGzB,QACE,OAAOM,I,SCdTrB,EAAQ,GAHVX,E,EAAAA,oBACAC,E,EAAAA,oBACAC,E,EAAAA,oBAGIkC,EAAe,CACnBE,SAAS,EACTC,MAAO,GACP9B,MAAO,IA6BM+B,EA3BK,WAAmC,IAAlCR,EAAiC,uDAAzBI,EAAcC,EAAW,uCACpD,OAAQA,EAAOjC,MACb,KAAKJ,EACH,OAAO,2BACFgC,GADL,IAEEM,SAAS,IAEb,KAAKrC,EACH,OAAO,2BACF+B,GADL,IAEEM,SAAS,EACTC,MAAOF,EAAO9B,QACdE,MAAO,KAEX,KAAKP,EACH,OAAO,2BACF8B,GADL,IAEEM,SAAS,EACTC,MAAO,GACP9B,MAAO4B,EAAO9B,UAGlB,QACE,OAAOyB,ICzBPS,EAAcC,YAAgB,CAClCT,eACAO,gBAGIG,EAASC,yBACTC,EAAQC,YAAYL,EAAaM,YAAgBC,IAAOL,IAc/CM,MAVf,WACE,OACE,8BACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,SCnBRK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,+BCJjD,yFAAO,IAAMnB,EAAU,UACVC,EAAY,c","file":"static/js/main.088f33e1.chunk.js","sourcesContent":["export const FETECH_USER_REQUEST = \"FETECH_USER_REQUEST\";\r\nexport const FETECH_USER_SUCCESS = \"FETECH_USER_SUCCESS\";\r\nexport const FETECH_USER_FAILURE = \"FETECH_USER_FAILURE\";\r\n","import {\r\n  FETECH_USER_FAILURE,\r\n  FETECH_USER_REQUEST,\r\n  FETECH_USER_SUCCESS,\r\n} from \"./asyncAction-types\";\r\n\r\nexport const fetchUserRequest = () => {\r\n  return {\r\n    type: FETECH_USER_REQUEST,\r\n  };\r\n};\r\nexport const fetchUserSuccess = (user) => {\r\n  return {\r\n    type: FETECH_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\nexport const fetchUserFailure = (error) => {\r\n  return {\r\n    type: FETECH_USER_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n","//normally action creater will return action object\r\n\r\nconst { default: Axios } = require(\"axios\");\r\nconst {\r\n  fetchUserRequest,\r\n  fetchUserSuccess,\r\n  fetchUserFailure,\r\n} = require(\"./asyncActions\");\r\n\r\n//but the thunk returns function instead of action object\r\nconst fetchUser = () => {\r\n  return function (dispatch) {\r\n    //now make axios request, and make dispatch necessary requests\r\n    dispatch(fetchUserRequest());\r\n    //and first dispatch the request\r\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        dispatch(fetchUserSuccess(response.data.map((user) => user.id)));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchUserFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default fetchUser;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { minus, plus } from \"./redux/actions\";\r\nimport fetchUser from \"./thunk/asyncActionCreater\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>{this.props.count}</h1>\r\n        <button onClick={this.props.plusOne}>+</button>\r\n        <button onClick={this.props.minusOne}>-</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    count: state.countReducer.count,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  plusOne: () => {\r\n    dispatch(plus());\r\n  },\r\n  minusOne: () => {\r\n    dispatch(minus());\r\n    dispatch(fetchUser());\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import { ADD_ONE, MINUS_ONE } from \"./action-types\";\r\n\r\nexport const plus = () => ({\r\n  type: ADD_ONE,\r\n});\r\n\r\nexport const minus = () => ({\r\n  type: MINUS_ONE,\r\n});\r\n","const { ADD_ONE, MINUS_ONE } = require(\"./action-types\");\r\n\r\nconst initialState = {\r\n  count: 0,\r\n};\r\nfunction countReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ONE:\r\n      return {\r\n        count: state.count + 1,\r\n      };\r\n\r\n    case MINUS_ONE:\r\n      return {\r\n        count: state.count - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default countReducer;\r\n","const {\r\n  FETECH_USER_REQUEST,\r\n  FETECH_USER_SUCCESS,\r\n  FETECH_USER_FAILURE,\r\n} = require(\"./asyncAction-types\");\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  users: [],\r\n  error: \"\",\r\n};\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETECH_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETECH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETECH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: [],\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport Counter from \"./Counter\";\r\nimport countReducer from \"./redux/stateReducer-stateChanger\";\r\nimport userReducer from \"./thunk/reducer-stateChanger\";\r\n\r\nconst rootReducer = combineReducers({\r\n  countReducer,\r\n  userReducer,\r\n});\r\n\r\nconst logger = createLogger();\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n//creates store with all reducrs/state changing functions\r\n//most of the business logic is present in the reducer, because reducers can change the state\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <Counter />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","export const ADD_ONE = \"ADD_ONE\";\r\nexport const MINUS_ONE = \"MINUS_ONE\";\r\n"],"sourceRoot":""}